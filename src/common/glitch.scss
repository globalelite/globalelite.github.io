// cf. https://github.com/codrops/CSSGlitchEffect

@use 'sass:list';
@use 'sass:math';
@use 'sass:string';

$gap-horizontal: 10px;
$gap-vertical: 5px;
$duration: 4s;
$delay: 2s;
$blend-modes: normal, normal, normal, overlay, overlay;
$blend-colors: transparent, transparent, transparent, #fb909a, #1c1cc9;

.glitch-img {
  position: relative;
  display: inline-block;
  vertical-align: bottom;
}

.glitch-img-layer {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: translate3d(0, 0, 0);
  background: list.nth($blend-colors, 1) none no-repeat 50% 50%;
  background-blend-mode: list.nth($blend-modes, 1);

  &:nth-child(n + 2) {
    opacity: 0;
    animation: glitch-img-layer-1 $duration linear $delay infinite;
  }

  @each $i in 2, 3, 4, 5 {
    &:nth-child(#{$i}) {
      background-color: list.nth($blend-colors, $i);
      background-blend-mode: list.nth($blend-modes, $i);
      animation-name: string.unquote('glitch-img-layer-' + $i);
    }
  }
}

@keyframes glitch-img-layer-1 {
}

@keyframes glitch-img-layer-2 {
  @for $i from 0 through 10 {
    #{2% * $i} {
      @if $i == 0 {
        opacity: 1;
        transform: translate3d($gap-horizontal, 0, 0);
      }
      $start: math.random(90) * 1%;
      $finish: $start + math.random(10) * 1%;
      clip-path: polygon(0 $start, 100% $start, 100% $finish, 0 $finish);
    }
  }
  21.9% {
    opacity: 1;
    transform: translate3d($gap-horizontal, 0, 0);
  }
  22%,
  100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
    clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  }
}

@keyframes glitch-img-layer-3 {
  0% {
    opacity: 1;
    transform: translate3d($gap-horizontal * -1, 0, 0);
  }
  @for $i from 0 through 10 {
    #{1% + 2% * $i} {
      $start: math.random(90) * 1%;
      $finish: $start + math.random(10) * 1%;
      clip-path: polygon(0 $start, 100% $start, 100% $finish, 0 $finish);
    }
  }
  22.9% {
    opacity: 1;
    transform: translate3d($gap-horizontal * -1, 0, 0);
  }
  23%,
  100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
    clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  }
}

@keyframes glitch-img-layer-4 {
  0% {
    opacity: 1;
    transform: translate3d(0, $gap-vertical * -1, 0) scale3d(-1, -1, 1);
    clip-path: polygon(0 1%, 100% 1%, 100% 3%, 0 3%);
  }
  @for $i from 0 through 40 {
    @if math.random(4) != 0 {
      #{1% + 0.5% * $i} {
        $start: math.random(90) * 1%;
        $finish: $start + math.random(10) * 1%;
        clip-path: polygon(0 $start, 100% $start, 100% $finish, 0 $finish);
      }
    }
  }
  21.9% {
    opacity: 1;
    transform: translate3d(0, $gap-vertical * -1, 0) scale3d(-1, -1, 1);
  }
  22%,
  100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
    clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  }
}

@keyframes glitch-img-layer-5 {
  0%,
  5% {
    opacity: 0.2;
    transform: translate3d($gap-horizontal, $gap-vertical, 0);
  }
  5.5%,
  100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
  }
}
